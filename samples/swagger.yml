swagger: "2.0"
info:
  version: "2.0.0"
  title: SAMPLE API
host: localhost:4000
basePath: /v2
#
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json; charset=utf-8
securityDefinitions:
  requiresAccessToken:
    type: apiKey
    name: Cookie
    in: header

##################### NOTE: Node Swagger middleware only supports swagger 2.0 #####################
#
#  Use reference at https://swagger.io/docs/specification/2-0/basic-structure/ instead of google results
#  Current latest is OpenAPI 3.0, formerly known as Swagger 3.0
#
###################################################################################################

paths:
  /car/{id}:
    x-swagger-router-controller: Cars
    x-wireswag-model: Car
    get:
      tags:
        - cars
      description: Returns a car
      operationId: getCar
      x-wireswag-operationId: getCar
      parameters:
        - in: path
          name: id
          description: Unique identifier of a Car
          required: true
          type: string
          x-example: 1aa2313
      produces:
        - application/json
      responses:
        200:
          headers:
            Content-Type:
              type: string
              default: application/json; charset=utf-8
          description: A car
  /api/products:
    x-swagger-router-controller: products
    x-wireswag-model: products

    get:
      description: Returns list of all Products
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralErrorResponse" 

    post:
      description: Insert new data Product
      parameters:
        - name: product
          description: Product will be inserted
          in: body
          required: true
          schema: 
            $ref: "#/definitions/ProductNoId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralErrorResponse"
  /api/products/{id}:
    x-swagger-router-controller: products

    get:
      description: Returns product by id
      parameters:
        - name: id
          description: id of product will be select
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralErrorResponse"

    put:
      description: Update data product by id
      parameters:
        - name: id
          description: id of product will be updated
          type: number
          in: path
          required: true
        - name: product
          description: Product information will be updated
          in: body
          required: true
          schema: 
            $ref: "#/definitions/ProductNoId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralErrorResponse"

    delete:
      description: Delete data product by id
      parameters:
        - name: id
          description: id of product will be deleted
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/GeneralErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  Product:
    properties:
      _id:
        type: string
      title:
        type: string
      description:
        type: string
      price:
        type: number
      modified:
        type: string
        
  ProductNoId:
    properties:
      title:
        type: string
      description:
        type: string
      price:
        type: number
        
  ProductsResponse:
    required:
      - result
      - products
    properties:
      result:
        type: boolean
        default: true
      products:
        type: array
        items:
          $ref: "#/definitions/Product"
          
  ProductResponse:
    required:
      - result
      - product
    properties:
      result:
        type: boolean
        default: true
      product:
        $ref: "#/definitions/Product"
          
  GeneralErrorResponse:
    required:
      - result
      - errorDesc
    properties:
      result:
        type: boolean
        default: false
      errorDesc:
        type: string
        
